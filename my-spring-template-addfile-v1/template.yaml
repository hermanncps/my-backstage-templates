apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: java-app-template
  title: Template addfiles v1 - Java App (Allow change)
  description: Create a simple microservice using Spring Boot MVC and Java plus a Data Base of your choice
  tags:
    - recommended
    - java
    - spring
    - database
spec:
  owner: rodrigorc@compasso.com.br
  type: service

  parameters:
    - title: Create/Append To File
      required:
        - path
        - content
      properties:
        path:
          title: Path
          type: string
          description: The path to the file
        content:
          title: Text area input
          type: string
          description: Add your new file content
          ui:widget: textarea
          ui:options:
            rows: 10
          # ui:help: 'Make sure it is valid by checking the schema at `/tools/entity-preview`'
          ui:placeholder: |
            ---
            Insert content here
    # - title: Create/Append To File
    #   required:
    #     - path
    #     - content
    #   properties:
    #     Files:
    #       type: array
    #       items:
    #         type: object
    #         properties:
    #           path:
    #             title: Path
    #             type: string
    #             description: The path to the file
    #           content:
    #             title: Text area input
    #             type: string
    #             description: Add your new file content
    #             ui:widget: textarea
    #             ui:options:
    #               rows: 10
    #             # ui:help: 'Make sure it is valid by checking the schema at `/tools/entity-preview`'
    #             ui:placeholder: |
    #               ---
    #               Insert content here

    - title: Choose Repository location
      properties:
        prTitle:
          title: Pull Request Title
          type: string
        prDescription:
          title: Pull Request Description
          type: string
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
        branchName:
          title: Branch Name
          type: string
          description: Branch Name where it will be put
  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        # values:
          # component_id: ${{ parameters.component_id }}
          # description: ${{ parameters.description }}
          # artifact_id: ${{ parameters.component_id }}
          # java_package_name: ${{ parameters.java_package_name }}
          # java_version: ${{ parameters.java_version }}
          # owner: ${{ parameters.owner }}
          # destination: ${{ parameters.repoUrl | parseRepoUrl }}
          # database_host: ${{ parameters.database_host }}
          # database_name: ${{ parameters.database_name }}
          # database_port: ${{ parameters.database_port }}
          # database_username: ${{ parameters.database_username }}
          # database_user_password: ${{ parameters.database_user_password }}
          # http_port: 8080
          # db_vendor: ${{ parameters.db_vendor }}
    
    - id: appendFile
      name: Append To File
      action: roadiehq-ext:utils:fs:append
      input:
        # each: ${{ parameters }}
        path: ${{ parameters.path }}
        content: '${{ parameters.content }}'
        #values:
        #  java_package_name: ${{ parameters.java_package_name }}
    
    - id: pullrequest
      name: Create pull request
      action: publish:github:pull-request
      input:
        repoUrl: ${{ parameters.repoUrl }}
        branchName: ${{ parameters.branchName }}
        title: ${{ parameters.prTitle }}
        description: ${{ parameters.prDescription }}

    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
    #     catalogInfoPath: "/catalog-info.yaml"

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}